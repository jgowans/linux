# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/kho/ftrace/ftrace.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Ftrace core data

maintainers:
  - Alexander Graf <graf@amazon.com>

description: |
  Ftrace can serialize its current trace buffers across kexec through KHO.
  For each instance, it preserves the backing ring buffers. It also
  preserves event ID associations. The post-KHO kernel can then consume
  these bits to reassemble trace data (not configuration!) for each trace
  instance and that way expose pre-KHO traces in post-KHO ftrace files.

properties:
  compatible:
    enum:
      - ftrace-v1

  events:
    $ref: /schemas/types.yaml#/definitions/uint32-array
    description:
      Array of { u32 crc, u32 type } elements. Each element contains a unique
      identifier for an event, followed by the identifier that this event had
      in the previous kernel's trace buffers.

# Every subnode has to be a trace array
patternProperties:
  ^(?!compatible|events)$:
    $ref: ftrace-array.yaml#
    description: Trace array description for each trace instance

required:
  - compatible
  - events

additionalProperties: true

examples:
  - |
    ftrace {
      compatible = "ftrace-v1";
      events = < 1 1 2 2 3 3 >;

      global-trace {
        compatible = "ftrace,array-v1";
        trace-flags = < 0x3354601 >;

        cpu0 {
          compatible = "ftrace,cpu-v1";
          cpu = < 0x00 >;
          mem = < 0x01000000 0x1   0x38 0x0
                  0x01000100 0x1   0x1000 0x0
                  0x01000038 0x1   0x38 0x0
                  0x01002000 0x1   0x1000 0x0 >;
        };
      };
    };
